<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">

  <!-- ROOT -->
  <xs:element name="Story">
    <xs:annotation>
      <xs:documentation>The root story element</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ObjectRoot" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="Object" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>

        </xs:element>
        <xs:element name="GroupRoot" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="Group" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TimelineRoot" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="Timeline" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PlacementRoot" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="Placement" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SoundRoot" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="Sound" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EventRoot" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="EventTrigger" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ParticleActionRoot" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="ParticleActionList" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element ref="Global" minOccurs="0" maxOccurs="1" />
        <xs:element name="About" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:attribute name="news" type="xs:string" use="optional" />
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="version" type="xs:unsignedInt" use="required" fixed="8" />
      <xs:attribute name="last_xpath" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- Each <Object> is unique
      Key: 
        <ObjectRoot><Object name=""></ObjectRoot>
      References:
        <ObjectChange name="">
        <Objects name="">
        <ObjectTarget name="">
        <ObjectRef name="">
    -->
    <xs:key name="objectKey">
      <xs:selector xpath="./ObjectRoot/Object" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:keyref name="objectKeyref_ObjectChange" refer="objectKey">
      <xs:selector xpath=".//ObjectChange" />
      <xs:field xpath="@name" />
    </xs:keyref>
    <xs:keyref name="objectKeyref_Objects" refer="objectKey">
      <xs:selector xpath=".//Objects" />
      <xs:field xpath="@name" />
    </xs:keyref>
    <xs:keyref name="objectKeyref_ObjectTarget" refer="objectKey">
      <xs:selector xpath=".//ObjectTarget" />
      <xs:field xpath="@name" />
    </xs:keyref>
    <xs:keyref name="objectKeyref_ObjectRef" refer="objectKey">
      <xs:selector xpath=".//ObjectRef" />
      <xs:field xpath="@name" />
    </xs:keyref>

    <!-- Each <Group> is unique
      Key: 
        <GroupRoot><Group name=""></GroupRoot>
      References:
        <ParticleSystem particle-group="">
        <Groups name="">
        <GroupObj name="">
        <GroupRef name="">
    -->
    <xs:key name="groupKey">
      <xs:selector xpath="./GroupRoot/Group" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:keyref name="groupKeyref_ParticleSystem" refer="groupKey">
      <xs:selector xpath=".//ParticleSystem" />
      <xs:field xpath="@particle-group" />
    </xs:keyref>
    <xs:keyref name="groupKeyref_Groups" refer="groupKey">
      <xs:selector xpath=".//Groups" />
      <xs:field xpath="@name" />
    </xs:keyref>
    <xs:keyref name="groupKeyref_GroupObj" refer="groupKey">
      <xs:selector xpath=".//GroupObj" />
      <xs:field xpath="@name" />
    </xs:keyref>
    <xs:keyref name="groupKeyref_GroupRef" refer="groupKey">
      <xs:selector xpath=".//GroupRef" />
      <xs:field xpath="@name" />
    </xs:keyref>

    <!-- Each <Timeline> is unique
      Key: 
        <TimelineRoot><Timeline name=""></TimelineRoot>
      References:
        <TimerChange name="">
    -->
    <xs:key name="timerKey">
      <xs:selector xpath="./TimelineRoot/Timeline" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:keyref name="timerKeyref" refer="timerKey">
      <xs:selector xpath=".//TimerChange" />
      <xs:field xpath="@name" />
    </xs:keyref>

    <!-- Each <Placement> in <PlacementRoot> is unique
      Key: 
        <PlacementRoot><Placement name=""></PlacementRoot>
      References:
        <Placement><RelativeTo></RelativeTo>
    -->
    <xs:key name="placementKey">
      <xs:selector xpath="./PlacementRoot/Placement" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:keyref name="placementKeyref" refer="placementKey">
      <xs:selector xpath=".//Placement" />
      <xs:field xpath="RelativeTo" />
    </xs:keyref>

    <!-- Each <Sound> is unique
      Key: 
        <SoundRoot><Sound name=""></SoundRoot>
      References:
        <Object><SoundRef></Object>
        <TimedActions><SoundRef name=""></TimedActions>
    -->
    <xs:key name="soundKey">
      <xs:selector xpath="./SoundRoot/Sound" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:keyref name="soundKeyref_Object" refer="soundKey">
      <xs:selector xpath=".//Object" />
      <xs:field xpath="SoundRef" />
    </xs:keyref>
    <xs:keyref name="soundKeyref_TimedActions" refer="soundKey">
      <xs:selector xpath=".//TimedAction/SoundRef" />
      <xs:field xpath="@name" />
    </xs:keyref>

    <!-- Each <EventTrigger> is unique
      Key: 
        <EventRoot><EventTrigger name=""></EventRoot>
      References:
        <Event name="">
    -->
    <xs:key name="eventKey">
      <xs:selector xpath="./EventRoot/EventTrigger" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:keyref name="eventKeyref" refer="eventKey">
      <xs:selector xpath=".//Event" />
      <xs:field xpath="@name" />
    </xs:keyref>

    <!-- Each <ParticleActionList> is unique
      Key: 
        <ParticleActionRoot><ParticleActionList name=""></ParticleActionRoot>
      References:
        <ParticleSystem actions-name="">
    -->
      <xs:key name="particleActionKey">
      <xs:selector xpath="./ParticleActionRoot/ParticleActionList" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:keyref name="particleActionKeyref" refer="particleActionKey">
      <xs:selector xpath=".//ParticleSystem" />
      <xs:field xpath="@actions-name" />
    </xs:keyref>
  </xs:element>

  <!-- <Object> -->
  <xs:element name="Object">
    <xs:annotation>
      <xs:documentation>Entire Content obj</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Visible" type="xs:boolean" default="true" />
        <xs:element name="Color" type="color" default="255,255,255" />
        <xs:element name="Lighting" type="xs:boolean" default="false" />
        <xs:element name="ClickThrough" type="xs:boolean" default="false" />
        <xs:element name="AroundSelfAxis" type="xs:boolean" default="false" />
        <xs:element name="Scale" type="xs:double" default="1.0" />
        <xs:element name="SoundRef" type="xs:string" minOccurs="0"></xs:element>
        <xs:element ref="Placement" />
        <xs:element ref="Content" />
        <xs:element name="LinkRoot" minOccurs="0">
          <xs:complexType>
            <xs:choice minOccurs="0">
              <xs:element ref="Link" minOccurs="0" />
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Content">
    <xs:annotation>
      <xs:documentation>Content node</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice>
        <xs:element name="None">
          <xs:complexType />
        </xs:element>
        <xs:element name="Text">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="text" type="xs:string" />
            </xs:sequence>
            <xs:attribute name="horiz-align" use="optional" default="center">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="left" />
                  <xs:enumeration value="center" />
                  <xs:enumeration value="right" />
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="vert-align" use="optional" default="center">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="top" />
                  <xs:enumeration value="center" />
                  <xs:enumeration value="bottom" />
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="font" type="xs:string" use="optional" />
            <xs:attribute name="depth" type="xs:float" use="optional" default="0.0" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Image">
          <xs:complexType>
            <xs:attribute name="filename" type="file" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="StereoImage">
          <xs:complexType>
            <xs:attribute name="left-image" type="file" use="required" />
            <xs:attribute name="right-image" type="file" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Model">
          <xs:complexType>
            <xs:attribute name="filename" type="file" use="required" />
            <xs:attribute name="check-collisions" type="xs:boolean" use="optional" default="false" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Light">
          <xs:complexType>
            <xs:choice>
              <xs:element name="Point">
                <xs:complexType />
              </xs:element>
              <xs:element name="Directional">
                <xs:complexType />
              </xs:element>
              <xs:element name="Spot">
                <xs:complexType>
                  <xs:attribute name="angle" type="xs:float" use="optional" default="30.0" />
                </xs:complexType>
              </xs:element>
            </xs:choice>
            <xs:attribute name="diffuse" type="xs:boolean" use="optional" default="true" />
            <xs:attribute name="specular" type="xs:boolean" use="optional" default="true" />
            <xs:attribute name="const_atten" type="xs:float" use="optional" default="1.0" />
            <xs:attribute name="lin_atten" type="xs:float" use="optional" default="0.0" />
            <xs:attribute name="quad_atten" type="xs:float" use="optional" default="0.0" />
          </xs:complexType>
        </xs:element>
        <xs:element name="ParticleSystem">
          <xs:complexType>
            <xs:attribute name="max-particles" type="xs:unsignedInt" use="optional" default="1000" />
            <xs:attribute name="actions-name" type="xs:string" use="required" />
            <xs:attribute name="particle-group" type="xs:string" use="required" />
            <xs:attribute name="look-at-camera" type="xs:boolean" use="optional" default="false" />
            <xs:attribute name="sequential" type="xs:boolean" use="optional" default="false" />
            <xs:attribute name="speed" type="xs:float" use="optional" default="1.0" />
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Link">
    <xs:annotation>
      <xs:documentation>Link Object</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Enabled" type="xs:boolean" default="true" />
        <xs:element name="RemainEnabled" type="xs:boolean" default="true" />
        <xs:element name="EnabledColor" type="color" default="0,128,255" />
        <xs:element name="SelectedColor" type="color" default="255,0,0" />
        <xs:element name="Actions" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>Link Actions Obj</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="ActionsType">
                <xs:sequence>
                  <xs:element name="Clicks" minOccurs="0">
                    <xs:complexType>
                      <xs:choice>
                        <xs:element name="Any">
                          <xs:complexType />
                        </xs:element>
                        <xs:element name="NumClicks">
                          <xs:complexType>
                            <xs:attribute name="num_clicks" type="xs:unsignedInt" use="optional" default="1" />
                            <xs:attribute name="reset" type="xs:boolean" use="optional" default="false" />
                          </xs:complexType>
                        </xs:element>
                      </xs:choice>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- <Group> -->
  <xs:element name="Group">
    <xs:annotation>
      <xs:documentation>Group obj</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="Objects" maxOccurs="unbounded" />
          <xs:element ref="Groups" maxOccurs="unbounded" />
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Objects">
    <xs:annotation>
      <xs:documentation>Reference group objects</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Groups">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>

  <!-- <Timeline> -->
  <xs:element name="Timeline">
    <xs:annotation>
      <xs:documentation>Timer obj</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="TimedActions" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="ActionsType">
                <xs:attribute name="seconds-time" type="xs:string" use="required" />
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required" />
      <xs:attribute name="start-immediately" type="xs:boolean" use="optional" default="true" />
    </xs:complexType>
  </xs:element>
  <xs:element name="GroupRef">
    <xs:annotation>
      <xs:documentation> Reference Group</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Transition" />
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required" />
      <xs:attribute name="random" use="optional">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="Select One Randomly" />
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="ActionsType">
    <xs:choice>
      <xs:element ref="ObjectChange" />
      <xs:element ref="GroupRef" />
      <xs:element ref="TimerChange" />
      <xs:element ref="SoundRef" />
      <xs:element ref="Event" />
      <xs:element name="MoveCave">
        <xs:complexType>
          <xs:sequence>
            <xs:choice>
              <xs:element name="Relative">
                <xs:complexType />
              </xs:element>
              <xs:element name="Absolute">
                <xs:complexType />
              </xs:element>
            </xs:choice>
            <xs:element ref="Placement" />
          </xs:sequence>
          <xs:attribute name="duration" type="xs:double" use="optional" default="0.0" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Restart">
        <xs:complexType />
      </xs:element>
    </xs:choice>
  </xs:complexType>
  <xs:element name="TimerChange">
    <xs:complexType>
      <xs:choice>
        <xs:element name="start">
          <xs:complexType />
        </xs:element>
        <xs:element name="stop">
          <xs:complexType />
        </xs:element>
        <xs:element name="continue">
          <xs:complexType />
        </xs:element>
        <xs:element name="start_if_not_started">
          <xs:complexType />
        </xs:element>
      </xs:choice>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="ObjectChange">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Transition" />
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="SoundRef">
    <xs:complexType>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>

  <!-- <Sound> -->
  <xs:element name="Sound">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Mode" minOccurs="0">
          <xs:complexType>
            <xs:choice>
              <xs:element name="Positional">
                <xs:complexType />
              </xs:element>
              <xs:element name="Fixed">
                <xs:complexType />
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name="Repeat">
          <xs:complexType>
            <xs:choice>
              <xs:element name="NoRepeat">
                <xs:complexType />
              </xs:element>
              <xs:element name="RepeatForever">
                <xs:complexType />
              </xs:element>
              <xs:element name="RepeatNum">
                <xs:simpleType>
                  <xs:restriction base="xs:unsignedInt">
                    <xs:minInclusive value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name="Settings">
          <xs:complexType>
            <xs:attribute name="freq" use="optional" default="1.0">
              <xs:simpleType>
                <xs:restriction base="xs:float">
                  <xs:minInclusive value="0.0" />
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="volume" use="optional" default="1.0">
              <xs:simpleType>
                <xs:restriction base="xs:float">
                  <xs:minInclusive value="0.0" />
                  <xs:maxInclusive value="1.0" />
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="pan" use="optional" default="0.0">
              <xs:simpleType>
                <xs:restriction base="xs:float">
                  <xs:minInclusive value="-1.0" />
                  <xs:maxInclusive value="1.0" />
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required" />
      <xs:attribute name="filename" type="file" use="required" />
      <xs:attribute name="autostart" type="xs:boolean" use="optional" default="false" />
    </xs:complexType>
  </xs:element>

  <!-- <EventTrigger> -->
  <xs:element name="EventTrigger">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element name="HeadTrack">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Position">
                  <xs:complexType>
                    <xs:choice>
                      <xs:element name="Anywhere">
                        <xs:complexType />
                      </xs:element>
                      <xs:element ref="Box" />
                    </xs:choice>
                  </xs:complexType>
                </xs:element>
                <xs:element name="Direction">
                  <xs:complexType>
                    <xs:choice>
                      <xs:element name="PointTarget">
                        <xs:complexType>
                          <xs:attribute name="point" type="vector" use="required" />
                          <xs:attribute name="angle" type="xs:double" use="optional" default="30" />
                        </xs:complexType>
                      </xs:element>
                      <xs:element name="DirectionTarget">
                        <xs:complexType>
                          <xs:attribute name="direction" type="vector" use="required" />
                          <xs:attribute name="angle" type="xs:double" use="optional" default="30" />
                        </xs:complexType>
                      </xs:element>
                      <xs:element name="ObjectTarget">
                        <xs:complexType>
                          <xs:attribute name="name" type="xs:string" use="required" />
                        </xs:complexType>
                      </xs:element>
                      <xs:element name="None">
                        <xs:complexType />
                      </xs:element>
                    </xs:choice>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="MoveTrack">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Source">
                  <xs:complexType>
                    <xs:choice>
                      <xs:element name="ObjectRef">
                        <xs:complexType>
                          <xs:attribute name="name" type="xs:string" use="required" />
                        </xs:complexType>
                      </xs:element>
                      <xs:element name="GroupObj">
                        <xs:complexType>
                          <xs:attribute name="name" type="xs:string" use="required" />
                          <xs:attribute name="objects">
                            <xs:simpleType>
                              <xs:restriction base="xs:string">
                                <xs:enumeration value="Any Object" />
                                <xs:enumeration value="All Objects" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:attribute>
                        </xs:complexType>
                      </xs:element>
                    </xs:choice>
                  </xs:complexType>
                </xs:element>
                <xs:element ref="Box" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:choice>
        <xs:element name="Actions" type="ActionsType" maxOccurs="unbounded" />
      </xs:sequence>
      <xs:attribute name="enabled" type="xs:boolean" use="optional" default="true" />
      <xs:attribute name="name" type="xs:string" use="required" />
      <xs:attribute name="duration" type="xs:double" use="optional" default="0.0" />
      <xs:attribute name="remain-enabled" type="xs:boolean" use="optional" default="true" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Box">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Movement">
          <xs:complexType>
            <xs:choice>
              <xs:element name="Inside">
                <xs:complexType />
              </xs:element>
              <xs:element name="Outside">
                <xs:complexType />
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ignore-Y" type="xs:boolean" use="optional" default="true" />
      <xs:attribute name="corner1" type="vector" use="required" />
      <xs:attribute name="corner2" type="vector" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Event">
    <xs:complexType>
      <xs:attribute name="enable" type="xs:boolean" use="required" />
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>

  <!-- <ParticleActionList> -->
  <xs:element name="ParticleActionList">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Source">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="ParticleDomain" />
            </xs:sequence>
            <xs:attribute name="rate" type="xs:double" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Vel">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="ParticleDomain" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element ref="ParticleAction" maxOccurs="unbounded" />
        <xs:element name="RemoveCondition">
          <xs:complexType>
            <xs:choice>
              <xs:element name="Age">
                <xs:complexType>
                  <xs:attribute name="age" type="xs:float" use="required" />
                  <xs:attribute name="younger-than" type="xs:boolean" use="optional" default="false" />
                </xs:complexType>
              </xs:element>
              <xs:element name="Position">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element ref="ParticleDomain" />
                  </xs:sequence>
                  <xs:attribute name="inside" type="xs:boolean" use="optional" default="false" />
                </xs:complexType>
              </xs:element>
              <xs:element name="Velocity">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element ref="ParticleDomain" />
                  </xs:sequence>
                  <xs:attribute name="inside" type="xs:boolean" use="optional" default="false" />
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="ParticleAction">
    <xs:complexType>
      <xs:choice>
        <xs:element name="Avoid">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="ParticleDomain" />
            </xs:sequence>
            <xs:attribute name="magnitude" type="xs:float" use="required" />
            <xs:attribute name="epsilon" type="xs:float" use="optional" default="0.001" />
            <xs:attribute name="lookahead" type="xs:float" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Bounce">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="ParticleDomain" />
            </xs:sequence>
            <xs:attribute name="friction" type="xs:float" use="required" />
            <xs:attribute name="resilience" type="xs:float" use="required" />
            <xs:attribute name="cutoff" type="xs:float" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Gravity">
          <xs:complexType>
            <xs:attribute name="direction" type="vector" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Damping">
          <xs:complexType>
            <xs:attribute name="direction" type="vector" use="required" />
            <xs:attribute name="vel_low" type="xs:float" use="optional" default="0.0" />
            <xs:attribute name="vel_high" type="xs:float" use="optional" default="0.0" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Gravitate">
          <xs:complexType>
            <xs:attribute name="magnitude" type="xs:float" use="optional" default="1.0" />
            <xs:attribute name="epsilon" type="xs:float" use="optional" default="0.001" />
            <xs:attribute name="max_radius" type="xs:float" use="optional" default="0.0" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Follow">
          <xs:complexType>
            <xs:attribute name="magnitude" type="xs:float" use="optional" default="1.0" />
            <xs:attribute name="epsilon" type="xs:float" use="optional" default="0.001" />
            <xs:attribute name="max_radius" type="xs:float" use="optional" default="0.0" />
          </xs:complexType>
        </xs:element>
        <xs:element name="MatchVel">
          <xs:complexType>
            <xs:attribute name="magnitude" type="xs:float" use="optional" default="1.0" />
            <xs:attribute name="epsilon" type="xs:float" use="optional" default="0.001" />
            <xs:attribute name="max_radius" type="xs:float" use="optional" default="0.0" />
          </xs:complexType>
        </xs:element>
        <xs:element name="OrbitPoint">
          <xs:complexType>
            <xs:attribute name="center" type="vector" use="required" />
            <xs:attribute name="magnitude" type="xs:float" use="optional" default="1.0" />
            <xs:attribute name="epsilon" type="xs:float" use="optional" default="0.001" />
            <xs:attribute name="max_radius" type="xs:float" use="optional" default="0.0" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Jet">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="ParticleDomain" />
              <xs:element name="AccelDomain" type="ParticleDomainType" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RandomVel" />
        <xs:element name="RandomAccel" />
        <xs:element name="RandomDisplace" />
        <xs:element name="TargetColor">
          <xs:complexType>
            <xs:attribute name="color" type="color" use="required" />
            <xs:attribute name="alpha" type="xs:float" use="optional" default="1.0" />
            <xs:attribute name="scale" type="xs:float" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="TargetSize" />
        <xs:element name="TargetVel" />
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="ParticleDomain" type="ParticleDomainType" />

  <!-- <Global> -->
  <xs:element name="Global">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="CameraPos">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="Placement" />
            </xs:sequence>
            <xs:attribute name="far-clip" type="xs:double" use="optional" default="100" />
          </xs:complexType>
        </xs:element>
        <xs:element name="CaveCameraPos">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="Placement" />
            </xs:sequence>
            <xs:attribute name="far-clip" type="xs:double" use="optional" default="100" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Background">
          <xs:complexType>
            <xs:attribute name="color" type="color" use="optional" default="0, 0, 0" />
          </xs:complexType>
        </xs:element>
        <xs:element name="WandNavigation">
          <xs:complexType>
            <xs:attribute name="allow-rotation" type="xs:boolean" use="optional" default="false" />
            <xs:attribute name="allow-movement" type="xs:boolean" use="optional" default="false" />
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <!-- Multi-use elements -->
  <xs:element name="Placement">
    <xs:annotation>
      <xs:documentation>Placement Obj</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="RelativeTo" type="xs:string" default="Center" />
        <xs:element name="Position" type="vector" default="(0.0, 0.0, 0.0)" />
        <xs:choice minOccurs="0">
          <xs:element name="Axis">
            <xs:complexType>
              <xs:attribute name="rotation" type="vector" use="optional" default="(0.0, 1.0, 0.0)" />
              <xs:attribute name="angle" type="xs:double" use="optional" default="0.0" />
            </xs:complexType>
          </xs:element>
          <xs:element name="LookAt">
            <xs:complexType>
              <xs:attribute name="target" type="vector" use="optional" default="(0.0, 0.0, 0.0)" />
              <xs:attribute name="up" type="vector" use="optional" default="(0.0, 1.0, 0.0)" />
            </xs:complexType>
          </xs:element>
          <xs:element name="Normal">
            <xs:complexType>
              <xs:attribute name="normal" type="vector" use="optional" default="(0.0, 0.0, 1.0)" />
              <xs:attribute name="angle" type="xs:double" use="optional" default="0.0" />
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string" use="optional" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Transition">
    <xs:complexType>
      <xs:choice>
        <xs:element name="Visible" type="xs:boolean" />
        <xs:element name="Movement">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="Placement" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MoveRel">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="Placement" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Color" type="color" default="255,255,255" />
        <xs:element name="Scale" type="xs:double" default="1.0" />
        <xs:element name="Sound">
          <xs:complexType>
            <xs:attribute name="action">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Play Sound" />
                  <xs:enumeration value="Stop Sound" />
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="LinkChange">
          <xs:complexType>
            <xs:choice>
              <xs:element name="link_on">
                <xs:complexType />
              </xs:element>
              <xs:element name="link_off">
                <xs:complexType />
              </xs:element>
              <xs:element name="activate">
                <xs:complexType />
              </xs:element>
              <xs:element name="activate_if_on">
                <xs:complexType />
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:choice>
      <xs:attribute name="duration" type="xs:double" use="optional" default="1.0" />
    </xs:complexType>
  </xs:element>
  <xs:complexType name="ParticleDomainType">
    <xs:choice>
      <xs:element name="Point">
        <xs:complexType>
          <xs:attribute name="point" type="vector" use="required" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Line">
        <xs:complexType>
          <xs:attribute name="p1" type="vector" use="required" />
          <xs:attribute name="p2" type="vector" use="required" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Triangle">
        <xs:complexType>
          <xs:attribute name="p1" type="vector" use="required" />
          <xs:attribute name="p2" type="vector" use="required" />
          <xs:attribute name="p3" type="vector" use="required" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Plane">
        <xs:complexType>
          <xs:attribute name="point" type="vector" use="required" />
          <xs:attribute name="normal" type="vector" use="required" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Rect">
        <xs:complexType>
          <xs:attribute name="point" type="vector" use="required" />
          <xs:attribute name="u-dir" type="vector" use="required" />
          <xs:attribute name="v-dir" type="vector" use="required" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Box">
        <xs:complexType>
          <xs:attribute name="p1" type="vector" use="required" />
          <xs:attribute name="p2" type="vector" use="required" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Sphere">
        <xs:complexType>
          <xs:attribute name="center" type="vector" use="required" />
          <xs:attribute name="radius" type="xs:float" use="required" />
          <xs:attribute name="radius-inner" type="xs:float" use="optional" default="0.0" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Cylinder">
        <xs:complexType>
          <xs:attribute name="p1" type="vector" use="required" />
          <xs:attribute name="p2" type="vector" use="required" />
          <xs:attribute name="radius" type="xs:float" use="required" />
          <xs:attribute name="radius-inner" type="xs:float" use="optional" default="0.0" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Cone">
        <xs:complexType>
          <xs:attribute name="base-center" type="vector" use="required" />
          <xs:attribute name="apex" type="vector" use="required" />
          <xs:attribute name="radius" type="xs:float" use="required" />
          <xs:attribute name="radius-inner" type="xs:float" use="optional" default="0.0" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Blob">
        <xs:complexType>
          <xs:attribute name="center" type="vector" use="required" />
          <xs:attribute name="stdev" type="xs:float" use="optional" default="1.0" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Disc">
        <xs:complexType>
          <xs:attribute name="center" type="vector" use="required" />
          <xs:attribute name="normal" type="vector" use="required" />
          <xs:attribute name="radius" type="xs:float" use="required" />
          <xs:attribute name="radius-inner" type="xs:float" use="optional" default="0.0" />
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <!-- Simple Types (string validation) -->
  <xs:simpleType name="file">
    <xs:annotation>
      <xs:documentation>A filename type</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  <xs:simpleType name="vector">
    <xs:annotation>
      <xs:documentation>vector attrib</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:whiteSpace value="collapse"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="color">
    <xs:annotation>
      <xs:documentation>color attrib</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:whiteSpace value="collapse"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>